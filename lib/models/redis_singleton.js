// Generated by CoffeeScript 1.3.3
(function() {
  var Config, Logger, RedisSingleton, Singleton, redis,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  redis = require('redis');

  Singleton = require('../singleton');

  Config = require('../config');

  Logger = require('../logger');

  /**
   * Redis utility wrapper that acts as a singleton.
  */


  RedisSingleton = (function(_super) {

    __extends(RedisSingleton, _super);

    function RedisSingleton() {
      var _this = this;
      this.config = Config.get();
      this.logger = Logger.get();
      this.redis = new redis.createClient(this.config.get("redis_port"), this.config.get("redis_host"));
      this.redis.on("error", function(err) {
        _this.logger.error(''.concat("Error connecting to redis://", _this.config.get('redis_host'), ':', _this.config.get('redis_port')));
        return process.exit(1);
      });
      return this.redis;
    }

    return RedisSingleton;

  })(Singleton);

  module.exports = RedisSingleton;

}).call(this);
